%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, 15 July 2010 15:09:42 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
37.0000 -1.00000 350.994 354.000 rc
newpath
38.0000 352.000 m
38.2370 327.768 l
38.4740 305.148 l
38.7111 284.035 l
38.9481 264.328 l
39.1852 245.936 l
39.4222 228.772 l
39.6592 212.755 l
39.8963 197.809 l
40.3704 170.853 l
40.8444 147.395 l
41.3185 126.989 l
41.7926 109.247 l
42.7408 80.4392 l
43.6889 58.7434 l
44.6371 42.4636 l
45.5853 30.3082 l
47.2352 16.1957 l
48.8852 8.07754 l
49.7102 5.52108 l
50.5352 3.69027 l
51.3602 2.43194 l
52.1852 1.62524 l
53.1130 1.13983 l
54.0408 1.00000 l
54.9685 1.12490 l
55.8963 1.45257 l
57.7519 2.53756 l
59.6075 3.99359 l
63.3432 7.49316 l
67.0790 11.3167 l
74.5150 19.1852 l
81.4091 26.5429 l
385.994 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
351.195 352.000 m
351.195 354.600 l
S
newpath
281.596 352.000 m
281.596 354.600 l
S
newpath
211.997 352.000 m
211.997 354.600 l
S
newpath
142.398 352.000 m
142.398 354.600 l
S
newpath
72.7994 352.000 m
72.7994 354.600 l
S
newpath
38.0000 352.000 m
385.994 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
204 375 14 15 rc
q
newpath
210.250 381.250 m
210.458 381.468 210.614 381.692 210.718 381.921  c
210.802 382.067 210.927 382.463 211.093 383.109  c
211.656 382.281 l
211.802 382.072 211.981 381.877 212.195 381.695  c
212.408 381.513 212.593 381.385 212.750 381.312  c
212.854 381.270 212.968 381.250 213.093 381.250  c
213.270 381.250 213.414 381.299 213.523 381.398  c
213.632 381.497 213.687 381.614 213.687 381.750  c
213.687 381.916 213.656 382.031 213.593 382.093  c
213.479 382.197 213.343 382.250 213.187 382.250  c
213.093 382.250 213.000 382.229 212.906 382.187  c
212.708 382.125 212.572 382.093 212.500 382.093  c
212.395 382.093 212.276 382.151 212.140 382.265  c
211.880 382.484 211.567 382.911 211.203 383.546  c
211.718 385.718 l
211.802 386.052 211.869 386.252 211.921 386.320  c
211.974 386.388 212.031 386.421 212.093 386.421  c
212.177 386.421 212.281 386.375 212.406 386.281  c
212.635 386.083 212.833 385.828 213.000 385.515  c
213.218 385.625 l
212.947 386.125 212.609 386.541 212.203 386.875  c
211.974 387.062 211.776 387.156 211.609 387.156  c
211.369 387.156 211.182 387.020 211.046 386.750  c
210.953 386.583 210.770 385.875 210.500 384.625  c
209.833 385.770 209.302 386.505 208.906 386.828  c
208.645 387.046 208.395 387.156 208.156 387.156  c
207.989 387.156 207.833 387.093 207.687 386.968  c
207.593 386.875 207.546 386.750 207.546 386.593  c
207.546 386.458 207.593 386.343 207.687 386.250  c
207.781 386.156 207.895 386.109 208.031 386.109  c
208.166 386.109 208.307 386.177 208.453 386.312  c
208.567 386.406 208.656 386.453 208.718 386.453  c
208.760 386.453 208.822 386.421 208.906 386.359  c
209.104 386.192 209.375 385.843 209.718 385.312  c
210.062 384.781 210.286 384.395 210.390 384.156  c
210.130 383.125 209.989 382.583 209.968 382.531  c
209.875 382.250 209.750 382.052 209.593 381.937  c
209.437 381.822 209.203 381.765 208.890 381.765  c
208.796 381.765 208.687 381.770 208.562 381.781  c
208.562 381.546 l
210.250 381.250 l
h
f
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 352.000 m
38.0000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
40.4687 371.750 m
40.4687 370.770 40.6171 369.924 40.9140 369.210  c
41.2109 368.497 41.6041 367.968 42.0937 367.625  c
42.4791 367.354 42.8750 367.218 43.2812 367.218  c
43.9375 367.218 44.5260 367.552 45.0468 368.218  c
45.7031 369.052 46.0312 370.182 46.0312 371.609  c
46.0312 372.609 45.8880 373.458 45.6015 374.156  c
45.3151 374.854 44.9479 375.362 44.5000 375.679  c
44.0520 375.997 43.6250 376.156 43.2187 376.156  c
42.3958 376.156 41.7083 375.671 41.1562 374.703  c
40.6979 373.880 40.4687 372.895 40.4687 371.750  c
h
41.7187 371.906 m
41.7187 373.093 41.8645 374.062 42.1562 374.812  c
42.3958 375.437 42.7552 375.750 43.2343 375.750  c
43.4635 375.750 43.7005 375.648 43.9453 375.445  c
44.1901 375.242 44.3750 374.895 44.5000 374.406  c
44.6979 373.687 44.7968 372.661 44.7968 371.328  c
44.7968 370.349 44.6927 369.531 44.4843 368.875  c
44.3385 368.385 44.1406 368.041 43.8906 367.843  c
43.7239 367.708 43.5156 367.640 43.2656 367.640  c
42.9843 367.640 42.7291 367.765 42.5000 368.015  c
42.1979 368.369 41.9921 368.924 41.8828 369.679  c
41.7734 370.434 41.7187 371.177 41.7187 371.906  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
107.599 352.000 m
107.599 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
105.468 371.750 m
105.468 370.770 105.617 369.924 105.914 369.210  c
106.210 368.497 106.604 367.968 107.093 367.625  c
107.479 367.354 107.875 367.218 108.281 367.218  c
108.937 367.218 109.526 367.552 110.046 368.218  c
110.703 369.052 111.031 370.182 111.031 371.609  c
111.031 372.609 110.888 373.458 110.601 374.156  c
110.315 374.854 109.947 375.362 109.500 375.679  c
109.052 375.997 108.625 376.156 108.218 376.156  c
107.395 376.156 106.708 375.671 106.156 374.703  c
105.697 373.880 105.468 372.895 105.468 371.750  c
h
106.718 371.906 m
106.718 373.093 106.864 374.062 107.156 374.812  c
107.395 375.437 107.755 375.750 108.234 375.750  c
108.463 375.750 108.700 375.648 108.945 375.445  c
109.190 375.242 109.375 374.895 109.500 374.406  c
109.697 373.687 109.796 372.661 109.796 371.328  c
109.796 370.349 109.692 369.531 109.484 368.875  c
109.338 368.385 109.140 368.041 108.890 367.843  c
108.724 367.708 108.515 367.640 108.265 367.640  c
107.984 367.640 107.729 367.765 107.500 368.015  c
107.197 368.369 106.992 368.924 106.882 369.679  c
106.773 370.434 106.718 371.177 106.718 371.906  c
h
113.125 374.765 m
113.322 374.765 113.489 374.835 113.625 374.976  c
113.760 375.117 113.828 375.281 113.828 375.468  c
113.828 375.666 113.760 375.833 113.625 375.968  c
113.489 376.104 113.322 376.171 113.125 376.171  c
112.927 376.171 112.760 376.104 112.625 375.968  c
112.489 375.833 112.421 375.666 112.421 375.468  c
112.421 375.270 112.489 375.104 112.625 374.968  c
112.760 374.833 112.927 374.765 113.125 374.765  c
h
120.703 374.343 m
120.109 376.000 l
115.031 376.000 l
115.031 375.765 l
116.520 374.401 117.570 373.286 118.179 372.421  c
118.789 371.557 119.093 370.770 119.093 370.062  c
119.093 369.510 118.927 369.059 118.593 368.710  c
118.260 368.362 117.859 368.187 117.390 368.187  c
116.974 368.187 116.596 368.309 116.257 368.554  c
115.919 368.799 115.671 369.161 115.515 369.640  c
115.281 369.640 l
115.385 368.859 115.656 368.260 116.093 367.843  c
116.531 367.427 117.078 367.218 117.734 367.218  c
118.432 367.218 119.015 367.442 119.484 367.890  c
119.953 368.338 120.187 368.864 120.187 369.468  c
120.187 369.906 120.083 370.343 119.875 370.781  c
119.562 371.468 119.057 372.192 118.359 372.953  c
117.307 374.109 116.645 374.807 116.375 375.046  c
118.625 375.046 l
119.083 375.046 119.403 375.028 119.585 374.992  c
119.768 374.955 119.934 374.885 120.085 374.781  c
120.237 374.677 120.364 374.531 120.468 374.343  c
120.703 374.343 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
177.197 352.000 m
177.197 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
175.468 371.750 m
175.468 370.770 175.617 369.924 175.914 369.210  c
176.210 368.497 176.604 367.968 177.093 367.625  c
177.479 367.354 177.875 367.218 178.281 367.218  c
178.937 367.218 179.526 367.552 180.046 368.218  c
180.703 369.052 181.031 370.182 181.031 371.609  c
181.031 372.609 180.888 373.458 180.601 374.156  c
180.315 374.854 179.947 375.362 179.500 375.679  c
179.052 375.997 178.625 376.156 178.218 376.156  c
177.395 376.156 176.708 375.671 176.156 374.703  c
175.697 373.880 175.468 372.895 175.468 371.750  c
h
176.718 371.906 m
176.718 373.093 176.864 374.062 177.156 374.812  c
177.395 375.437 177.755 375.750 178.234 375.750  c
178.463 375.750 178.700 375.648 178.945 375.445  c
179.190 375.242 179.375 374.895 179.500 374.406  c
179.697 373.687 179.796 372.661 179.796 371.328  c
179.796 370.349 179.692 369.531 179.484 368.875  c
179.338 368.385 179.140 368.041 178.890 367.843  c
178.724 367.708 178.515 367.640 178.265 367.640  c
177.984 367.640 177.729 367.765 177.500 368.015  c
177.197 368.369 176.992 368.924 176.882 369.679  c
176.773 370.434 176.718 371.177 176.718 371.906  c
h
183.125 374.765 m
183.322 374.765 183.489 374.835 183.625 374.976  c
183.760 375.117 183.828 375.281 183.828 375.468  c
183.828 375.666 183.760 375.833 183.625 375.968  c
183.489 376.104 183.322 376.171 183.125 376.171  c
182.927 376.171 182.760 376.104 182.625 375.968  c
182.489 375.833 182.421 375.666 182.421 375.468  c
182.421 375.270 182.489 375.104 182.625 374.968  c
182.760 374.833 182.927 374.765 183.125 374.765  c
h
190.796 372.828 m
190.796 373.734 l
189.640 373.734 l
189.640 376.000 l
188.593 376.000 l
188.593 373.734 l
184.953 373.734 l
184.953 372.921 l
188.953 367.218 l
189.640 367.218 l
189.640 372.828 l
190.796 372.828 l
h
188.593 372.828 m
188.593 368.546 l
185.578 372.828 l
188.593 372.828 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
246.796 352.000 m
246.796 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
244.468 371.750 m
244.468 370.770 244.617 369.924 244.914 369.210  c
245.210 368.497 245.604 367.968 246.093 367.625  c
246.479 367.354 246.875 367.218 247.281 367.218  c
247.937 367.218 248.526 367.552 249.046 368.218  c
249.703 369.052 250.031 370.182 250.031 371.609  c
250.031 372.609 249.888 373.458 249.601 374.156  c
249.315 374.854 248.947 375.362 248.500 375.679  c
248.052 375.997 247.625 376.156 247.218 376.156  c
246.395 376.156 245.708 375.671 245.156 374.703  c
244.697 373.880 244.468 372.895 244.468 371.750  c
h
245.718 371.906 m
245.718 373.093 245.864 374.062 246.156 374.812  c
246.395 375.437 246.755 375.750 247.234 375.750  c
247.463 375.750 247.700 375.648 247.945 375.445  c
248.190 375.242 248.375 374.895 248.500 374.406  c
248.697 373.687 248.796 372.661 248.796 371.328  c
248.796 370.349 248.692 369.531 248.484 368.875  c
248.338 368.385 248.140 368.041 247.890 367.843  c
247.724 367.708 247.515 367.640 247.265 367.640  c
246.984 367.640 246.729 367.765 246.500 368.015  c
246.197 368.369 245.992 368.924 245.882 369.679  c
245.773 370.434 245.718 371.177 245.718 371.906  c
h
252.125 374.765 m
252.322 374.765 252.489 374.835 252.625 374.976  c
252.760 375.117 252.828 375.281 252.828 375.468  c
252.828 375.666 252.760 375.833 252.625 375.968  c
252.489 376.104 252.322 376.171 252.125 376.171  c
251.927 376.171 251.760 376.104 251.625 375.968  c
251.489 375.833 251.421 375.666 251.421 375.468  c
251.421 375.270 251.489 375.104 251.625 374.968  c
251.760 374.833 251.927 374.765 252.125 374.765  c
h
259.578 367.218 m
259.578 367.453 l
259.015 367.505 258.557 367.614 258.203 367.781  c
257.849 367.947 257.500 368.203 257.156 368.546  c
256.812 368.890 256.528 369.273 256.304 369.695  c
256.080 370.117 255.890 370.614 255.734 371.187  c
256.349 370.770 256.963 370.562 257.578 370.562  c
258.161 370.562 258.669 370.799 259.101 371.273  c
259.533 371.747 259.750 372.359 259.750 373.109  c
259.750 373.828 259.531 374.484 259.093 375.078  c
258.572 375.796 257.880 376.156 257.015 376.156  c
256.421 376.156 255.921 375.958 255.515 375.562  c
254.713 374.812 254.312 373.833 254.312 372.625  c
254.312 371.854 254.466 371.122 254.773 370.429  c
255.080 369.737 255.520 369.119 256.093 368.578  c
256.666 368.036 257.216 367.674 257.742 367.492  c
258.268 367.309 258.755 367.218 259.203 367.218  c
259.578 367.218 l
h
255.625 371.656 m
255.552 372.229 255.515 372.692 255.515 373.046  c
255.515 373.453 255.591 373.893 255.742 374.367  c
255.893 374.841 256.114 375.218 256.406 375.500  c
256.625 375.697 256.890 375.796 257.203 375.796  c
257.567 375.796 257.895 375.622 258.187 375.273  c
258.479 374.924 258.625 374.432 258.625 373.796  c
258.625 373.067 258.479 372.440 258.187 371.914  c
257.895 371.388 257.489 371.125 256.968 371.125  c
256.802 371.125 256.627 371.158 256.445 371.226  c
256.263 371.294 255.989 371.437 255.625 371.656  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
316.395 352.000 m
316.395 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
314.468 371.750 m
314.468 370.770 314.617 369.924 314.914 369.210  c
315.210 368.497 315.604 367.968 316.093 367.625  c
316.479 367.354 316.875 367.218 317.281 367.218  c
317.937 367.218 318.526 367.552 319.046 368.218  c
319.703 369.052 320.031 370.182 320.031 371.609  c
320.031 372.609 319.888 373.458 319.601 374.156  c
319.315 374.854 318.947 375.362 318.500 375.679  c
318.052 375.997 317.625 376.156 317.218 376.156  c
316.395 376.156 315.708 375.671 315.156 374.703  c
314.697 373.880 314.468 372.895 314.468 371.750  c
h
315.718 371.906 m
315.718 373.093 315.864 374.062 316.156 374.812  c
316.395 375.437 316.755 375.750 317.234 375.750  c
317.463 375.750 317.700 375.648 317.945 375.445  c
318.190 375.242 318.375 374.895 318.500 374.406  c
318.697 373.687 318.796 372.661 318.796 371.328  c
318.796 370.349 318.692 369.531 318.484 368.875  c
318.338 368.385 318.140 368.041 317.890 367.843  c
317.724 367.708 317.515 367.640 317.265 367.640  c
316.984 367.640 316.729 367.765 316.500 368.015  c
316.197 368.369 315.992 368.924 315.882 369.679  c
315.773 370.434 315.718 371.177 315.718 371.906  c
h
322.125 374.765 m
322.322 374.765 322.489 374.835 322.625 374.976  c
322.760 375.117 322.828 375.281 322.828 375.468  c
322.828 375.666 322.760 375.833 322.625 375.968  c
322.489 376.104 322.322 376.171 322.125 376.171  c
321.927 376.171 321.760 376.104 321.625 375.968  c
321.489 375.833 321.421 375.666 321.421 375.468  c
321.421 375.270 321.489 375.104 321.625 374.968  c
321.760 374.833 321.927 374.765 322.125 374.765  c
h
326.250 371.671 m
325.562 371.109 325.119 370.658 324.921 370.320  c
324.724 369.981 324.625 369.630 324.625 369.265  c
324.625 368.703 324.841 368.221 325.273 367.820  c
325.705 367.419 326.281 367.218 327.000 367.218  c
327.697 367.218 328.257 367.406 328.679 367.781  c
329.101 368.156 329.312 368.583 329.312 369.062  c
329.312 369.385 329.197 369.713 328.968 370.046  c
328.739 370.380 328.265 370.776 327.546 371.234  c
328.286 371.807 328.776 372.260 329.015 372.593  c
329.338 373.020 329.500 373.474 329.500 373.953  c
329.500 374.557 329.270 375.075 328.812 375.507  c
328.354 375.940 327.750 376.156 327.000 376.156  c
326.177 376.156 325.536 375.901 325.078 375.390  c
324.713 374.974 324.531 374.520 324.531 374.031  c
324.531 373.656 324.661 373.281 324.921 372.906  c
325.182 372.531 325.625 372.119 326.250 371.671  c
h
327.234 370.984 m
327.744 370.526 328.067 370.164 328.203 369.898  c
328.338 369.632 328.406 369.333 328.406 369.000  c
328.406 368.562 328.281 368.216 328.031 367.960  c
327.781 367.705 327.442 367.578 327.015 367.578  c
326.578 367.578 326.224 367.703 325.953 367.953  c
325.682 368.203 325.546 368.494 325.546 368.828  c
325.546 369.046 325.604 369.268 325.718 369.492  c
325.833 369.716 325.994 369.927 326.203 370.125  c
327.234 370.984 l
h
326.546 371.906 m
326.192 372.197 325.932 372.518 325.765 372.867  c
325.599 373.216 325.515 373.593 325.515 374.000  c
325.515 374.552 325.664 374.992 325.960 375.320  c
326.257 375.648 326.635 375.812 327.093 375.812  c
327.552 375.812 327.919 375.682 328.195 375.421  c
328.471 375.161 328.609 374.849 328.609 374.484  c
328.609 374.182 328.526 373.906 328.359 373.656  c
328.067 373.208 327.463 372.625 326.546 371.906  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 352.000 m
385.994 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
388.531 368.234 m
390.625 367.218 l
390.828 367.218 l
390.828 374.484 l
390.828 374.963 390.849 375.263 390.890 375.382  c
390.932 375.502 391.015 375.593 391.140 375.656  c
391.265 375.718 391.520 375.755 391.906 375.765  c
391.906 376.000 l
388.671 376.000 l
388.671 375.765 l
389.078 375.755 389.341 375.718 389.460 375.656  c
389.580 375.593 389.664 375.510 389.710 375.406  c
389.757 375.302 389.781 374.994 389.781 374.484  c
389.781 369.843 l
389.781 369.208 389.760 368.802 389.718 368.625  c
389.687 368.489 389.632 368.390 389.554 368.328  c
389.476 368.265 389.380 368.234 389.265 368.234  c
389.109 368.234 388.895 368.302 388.625 368.437  c
388.531 368.234 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
38.0000 35.9339 m
35.4000 35.9339 l
S
newpath
38.0000 73.1181 m
35.4000 73.1181 l
S
newpath
38.0000 110.302 m
35.4000 110.302 l
S
newpath
38.0000 147.486 m
35.4000 147.486 l
S
newpath
38.0000 184.670 m
35.4000 184.670 l
S
newpath
38.0000 221.855 m
35.4000 221.855 l
S
newpath
38.0000 259.039 m
35.4000 259.039 l
S
newpath
38.0000 296.223 m
35.4000 296.223 l
S
newpath
38.0000 333.407 m
35.4000 333.407 l
S
newpath
38.0000 352.000 m
38.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 169 8 15 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 352.000 m
32.8000 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
28.4687 357.750 m
28.4687 356.770 28.6171 355.924 28.9140 355.210  c
29.2109 354.497 29.6041 353.968 30.0937 353.625  c
30.4791 353.354 30.8750 353.218 31.2812 353.218  c
31.9375 353.218 32.5260 353.552 33.0468 354.218  c
33.7031 355.052 34.0312 356.182 34.0312 357.609  c
34.0312 358.609 33.8880 359.458 33.6015 360.156  c
33.3151 360.854 32.9479 361.362 32.5000 361.679  c
32.0520 361.997 31.6250 362.156 31.2187 362.156  c
30.3958 362.156 29.7083 361.671 29.1562 360.703  c
28.6979 359.880 28.4687 358.895 28.4687 357.750  c
h
29.7187 357.906 m
29.7187 359.093 29.8645 360.062 30.1562 360.812  c
30.3958 361.437 30.7552 361.750 31.2343 361.750  c
31.4635 361.750 31.7005 361.648 31.9453 361.445  c
32.1901 361.242 32.3750 360.895 32.5000 360.406  c
32.6979 359.687 32.7968 358.661 32.7968 357.328  c
32.7968 356.349 32.6927 355.531 32.4843 354.875  c
32.3385 354.385 32.1406 354.041 31.8906 353.843  c
31.7239 353.708 31.5156 353.640 31.2656 353.640  c
30.9843 353.640 30.7291 353.765 30.5000 354.015  c
30.1979 354.369 29.9921 354.924 29.8828 355.679  c
29.7734 356.434 29.7187 357.177 29.7187 357.906  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 314.815 m
32.8000 314.815 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 319.750 m
19.4687 318.770 19.6171 317.924 19.9140 317.210  c
20.2109 316.497 20.6041 315.968 21.0937 315.625  c
21.4791 315.354 21.8750 315.218 22.2812 315.218  c
22.9375 315.218 23.5260 315.552 24.0468 316.218  c
24.7031 317.052 25.0312 318.182 25.0312 319.609  c
25.0312 320.609 24.8880 321.458 24.6015 322.156  c
24.3151 322.854 23.9479 323.362 23.5000 323.679  c
23.0520 323.997 22.6250 324.156 22.2187 324.156  c
21.3958 324.156 20.7083 323.671 20.1562 322.703  c
19.6979 321.880 19.4687 320.895 19.4687 319.750  c
h
20.7187 319.906 m
20.7187 321.093 20.8645 322.062 21.1562 322.812  c
21.3958 323.437 21.7552 323.750 22.2343 323.750  c
22.4635 323.750 22.7005 323.648 22.9453 323.445  c
23.1901 323.242 23.3750 322.895 23.5000 322.406  c
23.6979 321.687 23.7968 320.661 23.7968 319.328  c
23.7968 318.349 23.6927 317.531 23.4843 316.875  c
23.3385 316.385 23.1406 316.041 22.8906 315.843  c
22.7239 315.708 22.5156 315.640 22.2656 315.640  c
21.9843 315.640 21.7291 315.765 21.5000 316.015  c
21.1979 316.369 20.9921 316.924 20.8828 317.679  c
20.7734 318.434 20.7187 319.177 20.7187 319.906  c
h
27.1250 322.765 m
27.3229 322.765 27.4895 322.835 27.6250 322.976  c
27.7604 323.117 27.8281 323.281 27.8281 323.468  c
27.8281 323.666 27.7604 323.833 27.6250 323.968  c
27.4895 324.104 27.3229 324.171 27.1250 324.171  c
26.9270 324.171 26.7604 324.104 26.6250 323.968  c
26.4895 323.833 26.4218 323.666 26.4218 323.468  c
26.4218 323.270 26.4895 323.104 26.6250 322.968  c
26.7604 322.833 26.9270 322.765 27.1250 322.765  c
h
30.2812 316.234 m
32.3750 315.218 l
32.5781 315.218 l
32.5781 322.484 l
32.5781 322.963 32.5989 323.263 32.6406 323.382  c
32.6822 323.502 32.7656 323.593 32.8906 323.656  c
33.0156 323.718 33.2708 323.755 33.6562 323.765  c
33.6562 324.000 l
30.4218 324.000 l
30.4218 323.765 l
30.8281 323.755 31.0911 323.718 31.2109 323.656  c
31.3307 323.593 31.4140 323.510 31.4609 323.406  c
31.5078 323.302 31.5312 322.994 31.5312 322.484  c
31.5312 317.843 l
31.5312 317.208 31.5104 316.802 31.4687 316.625  c
31.4375 316.489 31.3828 316.390 31.3046 316.328  c
31.2265 316.265 31.1302 316.234 31.0156 316.234  c
30.8593 316.234 30.6458 316.302 30.3750 316.437  c
30.2812 316.234 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 277.631 m
32.8000 277.631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 282.750 m
19.4687 281.770 19.6171 280.924 19.9140 280.210  c
20.2109 279.497 20.6041 278.968 21.0937 278.625  c
21.4791 278.354 21.8750 278.218 22.2812 278.218  c
22.9375 278.218 23.5260 278.552 24.0468 279.218  c
24.7031 280.052 25.0312 281.182 25.0312 282.609  c
25.0312 283.609 24.8880 284.458 24.6015 285.156  c
24.3151 285.854 23.9479 286.362 23.5000 286.679  c
23.0520 286.997 22.6250 287.156 22.2187 287.156  c
21.3958 287.156 20.7083 286.671 20.1562 285.703  c
19.6979 284.880 19.4687 283.895 19.4687 282.750  c
h
20.7187 282.906 m
20.7187 284.093 20.8645 285.062 21.1562 285.812  c
21.3958 286.437 21.7552 286.750 22.2343 286.750  c
22.4635 286.750 22.7005 286.648 22.9453 286.445  c
23.1901 286.242 23.3750 285.895 23.5000 285.406  c
23.6979 284.687 23.7968 283.661 23.7968 282.328  c
23.7968 281.349 23.6927 280.531 23.4843 279.875  c
23.3385 279.385 23.1406 279.041 22.8906 278.843  c
22.7239 278.708 22.5156 278.640 22.2656 278.640  c
21.9843 278.640 21.7291 278.765 21.5000 279.015  c
21.1979 279.369 20.9921 279.924 20.8828 280.679  c
20.7734 281.434 20.7187 282.177 20.7187 282.906  c
h
27.1250 285.765 m
27.3229 285.765 27.4895 285.835 27.6250 285.976  c
27.7604 286.117 27.8281 286.281 27.8281 286.468  c
27.8281 286.666 27.7604 286.833 27.6250 286.968  c
27.4895 287.104 27.3229 287.171 27.1250 287.171  c
26.9270 287.171 26.7604 287.104 26.6250 286.968  c
26.4895 286.833 26.4218 286.666 26.4218 286.468  c
26.4218 286.270 26.4895 286.104 26.6250 285.968  c
26.7604 285.833 26.9270 285.765 27.1250 285.765  c
h
34.7031 285.343 m
34.1093 287.000 l
29.0312 287.000 l
29.0312 286.765 l
30.5208 285.401 31.5703 284.286 32.1796 283.421  c
32.7890 282.557 33.0937 281.770 33.0937 281.062  c
33.0937 280.510 32.9270 280.059 32.5937 279.710  c
32.2604 279.362 31.8593 279.187 31.3906 279.187  c
30.9739 279.187 30.5963 279.309 30.2578 279.554  c
29.9192 279.799 29.6718 280.161 29.5156 280.640  c
29.2812 280.640 l
29.3854 279.859 29.6562 279.260 30.0937 278.843  c
30.5312 278.427 31.0781 278.218 31.7343 278.218  c
32.4322 278.218 33.0156 278.442 33.4843 278.890  c
33.9531 279.338 34.1875 279.864 34.1875 280.468  c
34.1875 280.906 34.0833 281.343 33.8750 281.781  c
33.5625 282.468 33.0572 283.192 32.3593 283.953  c
31.3072 285.109 30.6458 285.807 30.3750 286.046  c
32.6250 286.046 l
33.0833 286.046 33.4036 286.028 33.5859 285.992  c
33.7682 285.955 33.9349 285.885 34.0859 285.781  c
34.2369 285.677 34.3645 285.531 34.4687 285.343  c
34.7031 285.343 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 240.447 m
32.8000 240.447 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 245.750 m
19.4687 244.770 19.6171 243.924 19.9140 243.210  c
20.2109 242.497 20.6041 241.968 21.0937 241.625  c
21.4791 241.354 21.8750 241.218 22.2812 241.218  c
22.9375 241.218 23.5260 241.552 24.0468 242.218  c
24.7031 243.052 25.0312 244.182 25.0312 245.609  c
25.0312 246.609 24.8880 247.458 24.6015 248.156  c
24.3151 248.854 23.9479 249.362 23.5000 249.679  c
23.0520 249.997 22.6250 250.156 22.2187 250.156  c
21.3958 250.156 20.7083 249.671 20.1562 248.703  c
19.6979 247.880 19.4687 246.895 19.4687 245.750  c
h
20.7187 245.906 m
20.7187 247.093 20.8645 248.062 21.1562 248.812  c
21.3958 249.437 21.7552 249.750 22.2343 249.750  c
22.4635 249.750 22.7005 249.648 22.9453 249.445  c
23.1901 249.242 23.3750 248.895 23.5000 248.406  c
23.6979 247.687 23.7968 246.661 23.7968 245.328  c
23.7968 244.349 23.6927 243.531 23.4843 242.875  c
23.3385 242.385 23.1406 242.041 22.8906 241.843  c
22.7239 241.708 22.5156 241.640 22.2656 241.640  c
21.9843 241.640 21.7291 241.765 21.5000 242.015  c
21.1979 242.369 20.9921 242.924 20.8828 243.679  c
20.7734 244.434 20.7187 245.177 20.7187 245.906  c
h
27.1250 248.765 m
27.3229 248.765 27.4895 248.835 27.6250 248.976  c
27.7604 249.117 27.8281 249.281 27.8281 249.468  c
27.8281 249.666 27.7604 249.833 27.6250 249.968  c
27.4895 250.104 27.3229 250.171 27.1250 250.171  c
26.9270 250.171 26.7604 250.104 26.6250 249.968  c
26.4895 249.833 26.4218 249.666 26.4218 249.468  c
26.4218 249.270 26.4895 249.104 26.6250 248.968  c
26.7604 248.833 26.9270 248.765 27.1250 248.765  c
h
29.4062 243.031 m
29.6562 242.447 29.9687 242.000 30.3437 241.687  c
30.7187 241.375 31.1822 241.218 31.7343 241.218  c
32.4322 241.218 32.9635 241.442 33.3281 241.890  c
33.6093 242.224 33.7500 242.578 33.7500 242.953  c
33.7500 243.588 33.3541 244.239 32.5625 244.906  c
33.0937 245.114 33.4947 245.411 33.7656 245.796  c
34.0364 246.182 34.1718 246.635 34.1718 247.156  c
34.1718 247.895 33.9322 248.536 33.4531 249.078  c
32.8385 249.796 31.9479 250.156 30.7812 250.156  c
30.1979 250.156 29.8020 250.083 29.5937 249.937  c
29.3854 249.791 29.2812 249.635 29.2812 249.468  c
29.2812 249.343 29.3307 249.237 29.4296 249.148  c
29.5286 249.059 29.6458 249.015 29.7812 249.015  c
29.8854 249.015 29.9947 249.031 30.1093 249.062  c
30.1822 249.083 30.3463 249.158 30.6015 249.289  c
30.8567 249.419 31.0312 249.500 31.1250 249.531  c
31.2812 249.572 31.4479 249.593 31.6250 249.593  c
32.0520 249.593 32.4270 249.427 32.7500 249.093  c
33.0729 248.760 33.2343 248.364 33.2343 247.906  c
33.2343 247.572 33.1614 247.250 33.0156 246.937  c
32.9010 246.697 32.7760 246.515 32.6406 246.390  c
32.4635 246.224 32.2161 246.072 31.8984 245.937  c
31.5807 245.802 31.2552 245.734 30.9218 245.734  c
30.7187 245.734 l
30.7187 245.531 l
31.0520 245.489 31.3880 245.369 31.7265 245.171  c
32.0651 244.974 32.3099 244.737 32.4609 244.460  c
32.6119 244.184 32.6875 243.875 32.6875 243.531  c
32.6875 243.104 32.5520 242.755 32.2812 242.484  c
32.0104 242.213 31.6718 242.078 31.2656 242.078  c
30.6093 242.078 30.0625 242.427 29.6250 243.125  c
29.4062 243.031 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 203.263 m
32.8000 203.263 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 208.750 m
19.4687 207.770 19.6171 206.924 19.9140 206.210  c
20.2109 205.497 20.6041 204.968 21.0937 204.625  c
21.4791 204.354 21.8750 204.218 22.2812 204.218  c
22.9375 204.218 23.5260 204.552 24.0468 205.218  c
24.7031 206.052 25.0312 207.182 25.0312 208.609  c
25.0312 209.609 24.8880 210.458 24.6015 211.156  c
24.3151 211.854 23.9479 212.362 23.5000 212.679  c
23.0520 212.997 22.6250 213.156 22.2187 213.156  c
21.3958 213.156 20.7083 212.671 20.1562 211.703  c
19.6979 210.880 19.4687 209.895 19.4687 208.750  c
h
20.7187 208.906 m
20.7187 210.093 20.8645 211.062 21.1562 211.812  c
21.3958 212.437 21.7552 212.750 22.2343 212.750  c
22.4635 212.750 22.7005 212.648 22.9453 212.445  c
23.1901 212.242 23.3750 211.895 23.5000 211.406  c
23.6979 210.687 23.7968 209.661 23.7968 208.328  c
23.7968 207.349 23.6927 206.531 23.4843 205.875  c
23.3385 205.385 23.1406 205.041 22.8906 204.843  c
22.7239 204.708 22.5156 204.640 22.2656 204.640  c
21.9843 204.640 21.7291 204.765 21.5000 205.015  c
21.1979 205.369 20.9921 205.924 20.8828 206.679  c
20.7734 207.434 20.7187 208.177 20.7187 208.906  c
h
27.1250 211.765 m
27.3229 211.765 27.4895 211.835 27.6250 211.976  c
27.7604 212.117 27.8281 212.281 27.8281 212.468  c
27.8281 212.666 27.7604 212.833 27.6250 212.968  c
27.4895 213.104 27.3229 213.171 27.1250 213.171  c
26.9270 213.171 26.7604 213.104 26.6250 212.968  c
26.4895 212.833 26.4218 212.666 26.4218 212.468  c
26.4218 212.270 26.4895 212.104 26.6250 211.968  c
26.7604 211.833 26.9270 211.765 27.1250 211.765  c
h
34.7968 209.828 m
34.7968 210.734 l
33.6406 210.734 l
33.6406 213.000 l
32.5937 213.000 l
32.5937 210.734 l
28.9531 210.734 l
28.9531 209.921 l
32.9531 204.218 l
33.6406 204.218 l
33.6406 209.828 l
34.7968 209.828 l
h
32.5937 209.828 m
32.5937 205.546 l
29.5781 209.828 l
32.5937 209.828 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 166.078 m
32.8000 166.078 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 171.750 m
19.4687 170.770 19.6171 169.924 19.9140 169.210  c
20.2109 168.497 20.6041 167.968 21.0937 167.625  c
21.4791 167.354 21.8750 167.218 22.2812 167.218  c
22.9375 167.218 23.5260 167.552 24.0468 168.218  c
24.7031 169.052 25.0312 170.182 25.0312 171.609  c
25.0312 172.609 24.8880 173.458 24.6015 174.156  c
24.3151 174.854 23.9479 175.362 23.5000 175.679  c
23.0520 175.997 22.6250 176.156 22.2187 176.156  c
21.3958 176.156 20.7083 175.671 20.1562 174.703  c
19.6979 173.880 19.4687 172.895 19.4687 171.750  c
h
20.7187 171.906 m
20.7187 173.093 20.8645 174.062 21.1562 174.812  c
21.3958 175.437 21.7552 175.750 22.2343 175.750  c
22.4635 175.750 22.7005 175.648 22.9453 175.445  c
23.1901 175.242 23.3750 174.895 23.5000 174.406  c
23.6979 173.687 23.7968 172.661 23.7968 171.328  c
23.7968 170.349 23.6927 169.531 23.4843 168.875  c
23.3385 168.385 23.1406 168.041 22.8906 167.843  c
22.7239 167.708 22.5156 167.640 22.2656 167.640  c
21.9843 167.640 21.7291 167.765 21.5000 168.015  c
21.1979 168.369 20.9921 168.924 20.8828 169.679  c
20.7734 170.434 20.7187 171.177 20.7187 171.906  c
h
27.1250 174.765 m
27.3229 174.765 27.4895 174.835 27.6250 174.976  c
27.7604 175.117 27.8281 175.281 27.8281 175.468  c
27.8281 175.666 27.7604 175.833 27.6250 175.968  c
27.4895 176.104 27.3229 176.171 27.1250 176.171  c
26.9270 176.171 26.7604 176.104 26.6250 175.968  c
26.4895 175.833 26.4218 175.666 26.4218 175.468  c
26.4218 175.270 26.4895 175.104 26.6250 174.968  c
26.7604 174.833 26.9270 174.765 27.1250 174.765  c
h
34.3906 167.390 m
33.8906 168.468 l
31.3125 168.468 l
30.7500 169.625 l
31.8645 169.791 32.7500 170.208 33.4062 170.875  c
33.9687 171.447 34.2500 172.125 34.2500 172.906  c
34.2500 173.364 34.1588 173.786 33.9765 174.171  c
33.7942 174.557 33.5625 174.885 33.2812 175.156  c
33.0000 175.427 32.6875 175.640 32.3437 175.796  c
31.8645 176.036 31.3645 176.156 30.8437 176.156  c
30.3333 176.156 29.9609 176.067 29.7265 175.890  c
29.4921 175.713 29.3750 175.520 29.3750 175.312  c
29.3750 175.187 29.4244 175.080 29.5234 174.992  c
29.6224 174.903 29.7447 174.859 29.8906 174.859  c
29.9947 174.859 30.0885 174.875 30.1718 174.906  c
30.2552 174.937 30.3958 175.026 30.5937 175.171  c
30.9166 175.390 31.2395 175.500 31.5625 175.500  c
32.0625 175.500 32.4974 175.312 32.8671 174.937  c
33.2369 174.562 33.4218 174.104 33.4218 173.562  c
33.4218 173.041 33.2552 172.557 32.9218 172.109  c
32.5885 171.661 32.1302 171.312 31.5468 171.062  c
31.0781 170.875 30.4479 170.765 29.6562 170.734  c
31.3125 167.390 l
34.3906 167.390 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 128.894 m
32.8000 128.894 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 133.750 m
19.4687 132.770 19.6171 131.924 19.9140 131.210  c
20.2109 130.497 20.6041 129.968 21.0937 129.625  c
21.4791 129.354 21.8750 129.218 22.2812 129.218  c
22.9375 129.218 23.5260 129.552 24.0468 130.218  c
24.7031 131.052 25.0312 132.182 25.0312 133.609  c
25.0312 134.609 24.8880 135.458 24.6015 136.156  c
24.3151 136.854 23.9479 137.362 23.5000 137.679  c
23.0520 137.997 22.6250 138.156 22.2187 138.156  c
21.3958 138.156 20.7083 137.671 20.1562 136.703  c
19.6979 135.880 19.4687 134.895 19.4687 133.750  c
h
20.7187 133.906 m
20.7187 135.093 20.8645 136.062 21.1562 136.812  c
21.3958 137.437 21.7552 137.750 22.2343 137.750  c
22.4635 137.750 22.7005 137.648 22.9453 137.445  c
23.1901 137.242 23.3750 136.895 23.5000 136.406  c
23.6979 135.687 23.7968 134.661 23.7968 133.328  c
23.7968 132.349 23.6927 131.531 23.4843 130.875  c
23.3385 130.385 23.1406 130.041 22.8906 129.843  c
22.7239 129.708 22.5156 129.640 22.2656 129.640  c
21.9843 129.640 21.7291 129.765 21.5000 130.015  c
21.1979 130.369 20.9921 130.924 20.8828 131.679  c
20.7734 132.434 20.7187 133.177 20.7187 133.906  c
h
27.1250 136.765 m
27.3229 136.765 27.4895 136.835 27.6250 136.976  c
27.7604 137.117 27.8281 137.281 27.8281 137.468  c
27.8281 137.666 27.7604 137.833 27.6250 137.968  c
27.4895 138.104 27.3229 138.171 27.1250 138.171  c
26.9270 138.171 26.7604 138.104 26.6250 137.968  c
26.4895 137.833 26.4218 137.666 26.4218 137.468  c
26.4218 137.270 26.4895 137.104 26.6250 136.968  c
26.7604 136.833 26.9270 136.765 27.1250 136.765  c
h
34.5781 129.218 m
34.5781 129.453 l
34.0156 129.505 33.5572 129.614 33.2031 129.781  c
32.8489 129.947 32.5000 130.203 32.1562 130.546  c
31.8125 130.890 31.5286 131.273 31.3046 131.695  c
31.0807 132.117 30.8906 132.614 30.7343 133.187  c
31.3489 132.770 31.9635 132.562 32.5781 132.562  c
33.1614 132.562 33.6692 132.799 34.1015 133.273  c
34.5338 133.747 34.7500 134.359 34.7500 135.109  c
34.7500 135.828 34.5312 136.484 34.0937 137.078  c
33.5729 137.796 32.8802 138.156 32.0156 138.156  c
31.4218 138.156 30.9218 137.958 30.5156 137.562  c
29.7135 136.812 29.3125 135.833 29.3125 134.625  c
29.3125 133.854 29.4661 133.122 29.7734 132.429  c
30.0807 131.737 30.5208 131.119 31.0937 130.578  c
31.6666 130.036 32.2161 129.674 32.7421 129.492  c
33.2682 129.309 33.7552 129.218 34.2031 129.218  c
34.5781 129.218 l
h
30.6250 133.656 m
30.5520 134.229 30.5156 134.692 30.5156 135.046  c
30.5156 135.453 30.5911 135.893 30.7421 136.367  c
30.8932 136.841 31.1145 137.218 31.4062 137.500  c
31.6250 137.697 31.8906 137.796 32.2031 137.796  c
32.5677 137.796 32.8958 137.622 33.1875 137.273  c
33.4791 136.924 33.6250 136.432 33.6250 135.796  c
33.6250 135.067 33.4791 134.440 33.1875 133.914  c
32.8958 133.388 32.4895 133.125 31.9687 133.125  c
31.8020 133.125 31.6276 133.158 31.4453 133.226  c
31.2630 133.294 30.9895 133.437 30.6250 133.656  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 91.7103 m
32.8000 91.7103 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 96.7500 m
19.4687 95.7708 19.6171 94.9244 19.9140 94.2109  c
20.2109 93.4974 20.6041 92.9687 21.0937 92.6250  c
21.4791 92.3541 21.8750 92.2187 22.2812 92.2187  c
22.9375 92.2187 23.5260 92.5520 24.0468 93.2187  c
24.7031 94.0520 25.0312 95.1822 25.0312 96.6093  c
25.0312 97.6093 24.8880 98.4583 24.6015 99.1562  c
24.3151 99.8541 23.9479 100.362 23.5000 100.679  c
23.0520 100.997 22.6250 101.156 22.2187 101.156  c
21.3958 101.156 20.7083 100.671 20.1562 99.7031  c
19.6979 98.8802 19.4687 97.8958 19.4687 96.7500  c
h
20.7187 96.9062 m
20.7187 98.0937 20.8645 99.0625 21.1562 99.8125  c
21.3958 100.437 21.7552 100.750 22.2343 100.750  c
22.4635 100.750 22.7005 100.648 22.9453 100.445  c
23.1901 100.242 23.3750 99.8958 23.5000 99.4062  c
23.6979 98.6875 23.7968 97.6614 23.7968 96.3281  c
23.7968 95.3489 23.6927 94.5312 23.4843 93.8750  c
23.3385 93.3854 23.1406 93.0416 22.8906 92.8437  c
22.7239 92.7083 22.5156 92.6406 22.2656 92.6406  c
21.9843 92.6406 21.7291 92.7656 21.5000 93.0156  c
21.1979 93.3697 20.9921 93.9244 20.8828 94.6796  c
20.7734 95.4349 20.7187 96.1770 20.7187 96.9062  c
h
27.1250 99.7656 m
27.3229 99.7656 27.4895 99.8359 27.6250 99.9765  c
27.7604 100.117 27.8281 100.281 27.8281 100.468  c
27.8281 100.666 27.7604 100.833 27.6250 100.968  c
27.4895 101.104 27.3229 101.171 27.1250 101.171  c
26.9270 101.171 26.7604 101.104 26.6250 100.968  c
26.4895 100.833 26.4218 100.666 26.4218 100.468  c
26.4218 100.270 26.4895 100.104 26.6250 99.9687  c
26.7604 99.8333 26.9270 99.7656 27.1250 99.7656  c
h
30.0625 92.3906 m
34.6718 92.3906 l
34.6718 92.6406 l
31.7968 101.171 l
31.0937 101.171 l
33.6562 93.4218 l
31.2968 93.4218 l
30.8177 93.4218 30.4791 93.4791 30.2812 93.5937  c
29.9166 93.7916 29.6302 94.0937 29.4218 94.5000  c
29.2343 94.4375 l
30.0625 92.3906 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 54.5260 m
32.8000 54.5260 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 59.7500 m
19.4687 58.7708 19.6171 57.9244 19.9140 57.2109  c
20.2109 56.4974 20.6041 55.9687 21.0937 55.6250  c
21.4791 55.3541 21.8750 55.2187 22.2812 55.2187  c
22.9375 55.2187 23.5260 55.5520 24.0468 56.2187  c
24.7031 57.0520 25.0312 58.1822 25.0312 59.6093  c
25.0312 60.6093 24.8880 61.4583 24.6015 62.1562  c
24.3151 62.8541 23.9479 63.3619 23.5000 63.6796  c
23.0520 63.9974 22.6250 64.1562 22.2187 64.1562  c
21.3958 64.1562 20.7083 63.6718 20.1562 62.7031  c
19.6979 61.8802 19.4687 60.8958 19.4687 59.7500  c
h
20.7187 59.9062 m
20.7187 61.0937 20.8645 62.0625 21.1562 62.8125  c
21.3958 63.4375 21.7552 63.7500 22.2343 63.7500  c
22.4635 63.7500 22.7005 63.6484 22.9453 63.4453  c
23.1901 63.2421 23.3750 62.8958 23.5000 62.4062  c
23.6979 61.6875 23.7968 60.6614 23.7968 59.3281  c
23.7968 58.3489 23.6927 57.5312 23.4843 56.8750  c
23.3385 56.3854 23.1406 56.0416 22.8906 55.8437  c
22.7239 55.7083 22.5156 55.6406 22.2656 55.6406  c
21.9843 55.6406 21.7291 55.7656 21.5000 56.0156  c
21.1979 56.3697 20.9921 56.9244 20.8828 57.6796  c
20.7734 58.4349 20.7187 59.1770 20.7187 59.9062  c
h
27.1250 62.7656 m
27.3229 62.7656 27.4895 62.8359 27.6250 62.9765  c
27.7604 63.1171 27.8281 63.2812 27.8281 63.4687  c
27.8281 63.6666 27.7604 63.8333 27.6250 63.9687  c
27.4895 64.1041 27.3229 64.1718 27.1250 64.1718  c
26.9270 64.1718 26.7604 64.1041 26.6250 63.9687  c
26.4895 63.8333 26.4218 63.6666 26.4218 63.4687  c
26.4218 63.2708 26.4895 63.1041 26.6250 62.9687  c
26.7604 62.8333 26.9270 62.7656 27.1250 62.7656  c
h
31.2500 59.6718 m
30.5625 59.1093 30.1197 58.6588 29.9218 58.3203  c
29.7239 57.9817 29.6250 57.6302 29.6250 57.2656  c
29.6250 56.7031 29.8411 56.2213 30.2734 55.8203  c
30.7057 55.4192 31.2812 55.2187 32.0000 55.2187  c
32.6979 55.2187 33.2578 55.4062 33.6796 55.7812  c
34.1015 56.1562 34.3125 56.5833 34.3125 57.0625  c
34.3125 57.3854 34.1979 57.7135 33.9687 58.0468  c
33.7395 58.3802 33.2656 58.7760 32.5468 59.2343  c
33.2864 59.8072 33.7760 60.2604 34.0156 60.5937  c
34.3385 61.0208 34.5000 61.4739 34.5000 61.9531  c
34.5000 62.5572 34.2708 63.0755 33.8125 63.5078  c
33.3541 63.9401 32.7500 64.1562 32.0000 64.1562  c
31.1770 64.1562 30.5364 63.9010 30.0781 63.3906  c
29.7135 62.9739 29.5312 62.5208 29.5312 62.0312  c
29.5312 61.6562 29.6614 61.2812 29.9218 60.9062  c
30.1822 60.5312 30.6250 60.1197 31.2500 59.6718  c
h
32.2343 58.9843 m
32.7447 58.5260 33.0677 58.1640 33.2031 57.8984  c
33.3385 57.6328 33.4062 57.3333 33.4062 57.0000  c
33.4062 56.5625 33.2812 56.2161 33.0312 55.9609  c
32.7812 55.7057 32.4427 55.5781 32.0156 55.5781  c
31.5781 55.5781 31.2239 55.7031 30.9531 55.9531  c
30.6822 56.2031 30.5468 56.4947 30.5468 56.8281  c
30.5468 57.0468 30.6041 57.2682 30.7187 57.4921  c
30.8333 57.7161 30.9947 57.9270 31.2031 58.1250  c
32.2343 58.9843 l
h
31.5468 59.9062 m
31.1927 60.1979 30.9322 60.5182 30.7656 60.8671  c
30.5989 61.2161 30.5156 61.5937 30.5156 62.0000  c
30.5156 62.5520 30.6640 62.9921 30.9609 63.3203  c
31.2578 63.6484 31.6354 63.8125 32.0937 63.8125  c
32.5520 63.8125 32.9192 63.6822 33.1953 63.4218  c
33.4713 63.1614 33.6093 62.8489 33.6093 62.4843  c
33.6093 62.1822 33.5260 61.9062 33.3593 61.6562  c
33.0677 61.2083 32.4635 60.6250 31.5468 59.9062  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 17.3418 m
32.8000 17.3418 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.4687 22.7500 m
19.4687 21.7708 19.6171 20.9244 19.9140 20.2109  c
20.2109 19.4974 20.6041 18.9687 21.0937 18.6250  c
21.4791 18.3541 21.8750 18.2187 22.2812 18.2187  c
22.9375 18.2187 23.5260 18.5520 24.0468 19.2187  c
24.7031 20.0520 25.0312 21.1822 25.0312 22.6093  c
25.0312 23.6093 24.8880 24.4583 24.6015 25.1562  c
24.3151 25.8541 23.9479 26.3619 23.5000 26.6796  c
23.0520 26.9974 22.6250 27.1562 22.2187 27.1562  c
21.3958 27.1562 20.7083 26.6718 20.1562 25.7031  c
19.6979 24.8802 19.4687 23.8958 19.4687 22.7500  c
h
20.7187 22.9062 m
20.7187 24.0937 20.8645 25.0625 21.1562 25.8125  c
21.3958 26.4375 21.7552 26.7500 22.2343 26.7500  c
22.4635 26.7500 22.7005 26.6484 22.9453 26.4453  c
23.1901 26.2421 23.3750 25.8958 23.5000 25.4062  c
23.6979 24.6875 23.7968 23.6614 23.7968 22.3281  c
23.7968 21.3489 23.6927 20.5312 23.4843 19.8750  c
23.3385 19.3854 23.1406 19.0416 22.8906 18.8437  c
22.7239 18.7083 22.5156 18.6406 22.2656 18.6406  c
21.9843 18.6406 21.7291 18.7656 21.5000 19.0156  c
21.1979 19.3697 20.9921 19.9244 20.8828 20.6796  c
20.7734 21.4349 20.7187 22.1770 20.7187 22.9062  c
h
27.1250 25.7656 m
27.3229 25.7656 27.4895 25.8359 27.6250 25.9765  c
27.7604 26.1171 27.8281 26.2812 27.8281 26.4687  c
27.8281 26.6666 27.7604 26.8333 27.6250 26.9687  c
27.4895 27.1041 27.3229 27.1718 27.1250 27.1718  c
26.9270 27.1718 26.7604 27.1041 26.6250 26.9687  c
26.4895 26.8333 26.4218 26.6666 26.4218 26.4687  c
26.4218 26.2708 26.4895 26.1041 26.6250 25.9687  c
26.7604 25.8333 26.9270 25.7656 27.1250 25.7656  c
h
29.4375 27.1718 m
29.4375 26.9375 l
29.9895 26.9375 30.5026 26.8125 30.9765 26.5625  c
31.4505 26.3125 31.9088 25.8776 32.3515 25.2578  c
32.7942 24.6380 33.0989 23.9583 33.2656 23.2187  c
32.5989 23.6458 32.0000 23.8593 31.4687 23.8593  c
30.8645 23.8593 30.3463 23.6276 29.9140 23.1640  c
29.4817 22.7005 29.2656 22.0781 29.2656 21.2968  c
29.2656 20.5468 29.4791 19.8750 29.9062 19.2812  c
30.4270 18.5729 31.1093 18.2187 31.9531 18.2187  c
32.6614 18.2187 33.2656 18.5104 33.7656 19.0937  c
34.3802 19.8125 34.6875 20.7031 34.6875 21.7656  c
34.6875 22.7239 34.4531 23.6171 33.9843 24.4453  c
33.5156 25.2734 32.8645 25.9583 32.0312 26.5000  c
31.3437 26.9479 30.5989 27.1718 29.7968 27.1718  c
29.4375 27.1718 l
h
33.3750 22.7500 m
33.4479 22.1979 33.4843 21.7604 33.4843 21.4375  c
33.4843 21.0208 33.4140 20.5755 33.2734 20.1015  c
33.1328 19.6276 32.9349 19.2630 32.6796 19.0078  c
32.4244 18.7526 32.1354 18.6250 31.8125 18.6250  c
31.4375 18.6250 31.1067 18.7942 30.8203 19.1328  c
30.5338 19.4713 30.3906 19.9739 30.3906 20.6406  c
30.3906 21.5364 30.5781 22.2343 30.9531 22.7343  c
31.2343 23.0989 31.5729 23.2812 31.9687 23.2812  c
32.1666 23.2812 32.3984 23.2343 32.6640 23.1406  c
32.9296 23.0468 33.1666 22.9166 33.3750 22.7500  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
